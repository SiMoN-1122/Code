/*********************************************************************************************************
* 模块名称：JumperData.h
* 摘    要：数据包模块
* 当前版本：1.0.0
* 作    者：
* 完成日期：2020年01月01日 
* 内    容：
* 注    意：                                                                  
**********************************************************************************************************
* 取代版本：
* 作    者：
* 完成日期：
* 修改内容：
* 修改文件：
*********************************************************************************************************/
#ifndef _Data_H_
#define _Data_H_

/*********************************************************************************************************
*                                              包含头文件
*********************************************************************************************************/
#include "DataType.h"

/*********************************************************************************************************
*                                              宏定义
*********************************************************************************************************/
#define DataRangeMax 0xFF

//3.7V标称的锂电池电压范围为4.2~2.5V，分压电路使检测到的电压为1/3(实际测量：4.02V时是分压为1.25V,ADC测量1.47)（难道是滤波问题？）
#define BatteryMax 1.7//1.4
#define BatteryMin 0.83
#define BatteryDiff (BatteryMax-BatteryMin)
/*********************************************************************************************************
*                                              枚举结构体
*********************************************************************************************************/
//声明波形数据结构体
typedef struct
{
  u8 frameHeader;     //帧头，应为0xFE
  u8 commandType;     //命令类型，应为0xA5
  u8 commandWord;     //命令字，应为0x01
  u8 waveData[50];    //波形数据包，每两个字节表示一个数据
  u8 checkSum;        //校验和,波形数据包累加后取低八位  
}StructWaveData;

//声明心电参数结构体
typedef struct
{
  u8  frameHeader;     //帧头，应为0xFE
  u8  commandType;     //命令类型，应为0xA5
  u8  commandWord;     //命令字，应为0x01
  u8  hardWareVer;     //硬件系统版本号：  bit5~7：高位  bit0~4：低位
  u8  softWareVer;     //软件系统版本号
  u8  batteryCapacity; //电池电量
  u8  HeartRateH;      //心率高位
  u8  HeartRateL;      //心率低位
  u8  status;          //标志位，暂时设置为0
  u8  checkSum;        //校验和，从硬件系统版本号开始累加到status，取低八位  
}StructECGPara;

//用于处理数据，便于发送的结构体
typedef struct
{
  double  maxData;     //最大值
  double  minData;     //最小值
  double  diffData;    //差值
}StructStand;

extern StructWaveData g_structWaveData;  //波形数据结构体
extern StructECGPara  g_structECGPara;   //心电参数结构体
/*********************************************************************************************************
*                                              API函数声明
*********************************************************************************************************/
void  InitJumperData(void);        //初始化数据包模块
void  WaveDataAdd(u16 Data);       //向波形数据包添加数据
void ECGParaSend(void);            //发送心电参数数据包
u16   DataAccess(double vol);      //将电压值约束在范围内并准备新的范围
#endif
